# ===================================================================
# CONFIGURAÇÃO DO MICROSERVIÇO CORTESIA PROCESSOR
# ===================================================================

# Informações da aplicação
spring.application.name=cortesia-processor-service
server.port=8081


# Perfil ativo
spring.profiles.active=dev

# ===================================================================
# CONFIGURAÇÃO DO BANCO DE DADOS
# ===================================================================
#spring.datasource.url=jdbc:postgresql://localhost:5432/cortesia_db
#spring.datasource.username=cortesia_user
#spring.datasource.password=cortesia_pass
#spring.datasource.driver-class-name=org.postgresql.Driver

# Pool de conexões HikariCP
#spring.datasource.hikari.maximum-pool-size=20
#spring.datasource.hikari.minimum-idle=5
#spring.datasource.hikari.idle-timeout=300000
#spring.datasource.hikari.connection-timeout=20000
#spring.datasource.hikari.max-lifetime=1200000

# ===================================================================
# CONFIGURAÇÃO DO JPA/HIBERNATE
# ===================================================================
#spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.show-sql=false
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.jdbc.batch_size=25
#spring.jpa.properties.hibernate.order_inserts=true
#spring.jpa.properties.hibernate.order_updates=true
#spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true


# ===================================================================
# CONFIGURAÇÃO DO KAFKA
# ===================================================================

# Configurações gerais
spring.kafka.bootstrap-servers=15.229.173.87:19092
spring.kafka.client-id=cortesia-processor-service

# Configurações do Consumer
spring.kafka.consumer.group-id=cortesia-processor-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=br.art.cinex.cortesia.dto
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.max-poll-records=10
spring.kafka.consumer.fetch-min-size=1
spring.kafka.consumer.fetch-max-wait=500ms

# Configurações do Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=16384
spring.kafka.producer.linger-ms=5
spring.kafka.producer.buffer-memory=33554432

# Configurações específicas dos tópicos
app.kafka.topics.cortesia-para-emitir=cortesia-para-emitir
app.kafka.topics.cortesia-processada=cortesia-processada
app.kafka.topics.cortesia-erro=cortesia-erro

# Configurações do Producer Service
app.kafka.producer.timeout-seconds=30

# ===================================================================
# CONFIGURAÇÃO DE EMAIL
# ===================================================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=gedtotal@gmail.com
spring.mail.password=cqvnvtjfhnqrekco
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Configurações customizadas de email
app.email.from=gedtotal@gmail.com
app.email.timeout-seconds=60
app.email.retry-attempts=3

# ===================================================================
# CONFIGURAÇÃO DE RELATÓRIOS
# ===================================================================
app.relatorios.diretorio=classpath:relatorios/
app.relatorios.temp-dir=${java.io.tmpdir}/cortesia-reports
app.relatorios.max-file-size-mb=50
app.relatorios.cleanup-temp-files=true


# End-point JHipster
cinex.api.base-url=https://cinexapi.ingressocinex.com.br/api
cinex.api.cadastro-path=/cadastropromocaos?cupomEnviado.equals=false

# Quantidade padrão de cortesias
app.cortesia.quantidade-padrao=2
app.cortesia.destinacao=Promoção de férias Cinex
app.cortesia.validade-impressao=2025-08-01

# ===================================================================
# CONFIGURAÇÃO DE LOGGING
# ===================================================================
logging.level.root=INFO
logging.level.br.art.cinex.cortesia=DEBUG
logging.level.org.springframework.kafka=INFO
logging.level.org.apache.kafka=WARN
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Configuração do arquivo de log
logging.file.name=logs/cortesia-processor.log
logging.file.max-size=10MB
logging.file.max-history=30
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{requestId}] %logger{36} - %msg%n
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level [%X{requestId}] %logger{20} - %msg%n

# ===================================================================
# CONFIGURAÇÃO DO ACTUATOR (MONITORAMENTO)
# ===================================================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus,kafka
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.metrics.export.prometheus.enabled=true

# Health checks customizados
management.health.kafka.enabled=true
management.health.db.enabled=true
management.health.mail.enabled=true

# ===================================================================
# CONFIGURAÇÕES DE PERFORMANCE
# ===================================================================
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=10
server.tomcat.connection-timeout=20000
server.tomcat.max-connections=8192

# ===================================================================
# CONFIGURAÇÕES DE SEGURANÇA
# ===================================================================
server.error.include-stacktrace=never
server.error.include-message=always

# ===================================================================
# CONFIGURAÇÕES CUSTOMIZADAS DA APLICAÇÃO
# ===================================================================

# Limites de processamento
app.cortesia.max-quantidade-por-solicitacao=1000
app.cortesia.max-solicitacoes-simultaneas=50
app.cortesia.timeout-processamento-segundos=300

# Configurações de cache (se implementado)
app.cache.cortesia.ttl-minutes=30
app.cache.relatorio.ttl-minutes=10

# Configurações de retry
app.retry.max-attempts=3
app.retry.delay-seconds=2
app.retry.backoff-multiplier=2.0
